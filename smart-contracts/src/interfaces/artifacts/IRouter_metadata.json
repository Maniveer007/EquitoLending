{
	"compiler": {
		"version": "0.8.27+commit.40a35a09"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [],
				"name": "EquitoAddressSet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "EquitoFeesSet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "messageHash",
						"type": "bytes32"
					}
				],
				"name": "MessageDelivered",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "messageHash",
						"type": "bytes32"
					}
				],
				"name": "MessageExecuted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "blockNumber",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "sourceChainSelector",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "bytes32",
										"name": "lower",
										"type": "bytes32"
									},
									{
										"internalType": "bytes32",
										"name": "upper",
										"type": "bytes32"
									}
								],
								"internalType": "struct bytes64",
								"name": "sender",
								"type": "tuple"
							},
							{
								"internalType": "uint256",
								"name": "destinationChainSelector",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "bytes32",
										"name": "lower",
										"type": "bytes32"
									},
									{
										"internalType": "bytes32",
										"name": "upper",
										"type": "bytes32"
									}
								],
								"internalType": "struct bytes64",
								"name": "receiver",
								"type": "tuple"
							},
							{
								"internalType": "bytes32",
								"name": "hashedData",
								"type": "bytes32"
							}
						],
						"indexed": false,
						"internalType": "struct EquitoMessage",
						"name": "message",
						"type": "tuple"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "messageData",
						"type": "bytes"
					}
				],
				"name": "MessageSendRequested",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "verifier",
						"type": "address"
					}
				],
				"name": "VerifierAdded",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "chainSelector",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "blockNumber",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "sourceChainSelector",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "bytes32",
										"name": "lower",
										"type": "bytes32"
									},
									{
										"internalType": "bytes32",
										"name": "upper",
										"type": "bytes32"
									}
								],
								"internalType": "struct bytes64",
								"name": "sender",
								"type": "tuple"
							},
							{
								"internalType": "uint256",
								"name": "destinationChainSelector",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "bytes32",
										"name": "lower",
										"type": "bytes32"
									},
									{
										"internalType": "bytes32",
										"name": "upper",
										"type": "bytes32"
									}
								],
								"internalType": "struct bytes64",
								"name": "receiver",
								"type": "tuple"
							},
							{
								"internalType": "bytes32",
								"name": "hashedData",
								"type": "bytes32"
							}
						],
						"internalType": "struct EquitoMessage",
						"name": "message",
						"type": "tuple"
					},
					{
						"internalType": "bytes",
						"name": "messageData",
						"type": "bytes"
					},
					{
						"internalType": "uint256",
						"name": "verifierIndex",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "proof",
						"type": "bytes"
					}
				],
				"name": "deliverAndExecuteMessage",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "blockNumber",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "sourceChainSelector",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "bytes32",
										"name": "lower",
										"type": "bytes32"
									},
									{
										"internalType": "bytes32",
										"name": "upper",
										"type": "bytes32"
									}
								],
								"internalType": "struct bytes64",
								"name": "sender",
								"type": "tuple"
							},
							{
								"internalType": "uint256",
								"name": "destinationChainSelector",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "bytes32",
										"name": "lower",
										"type": "bytes32"
									},
									{
										"internalType": "bytes32",
										"name": "upper",
										"type": "bytes32"
									}
								],
								"internalType": "struct bytes64",
								"name": "receiver",
								"type": "tuple"
							},
							{
								"internalType": "bytes32",
								"name": "hashedData",
								"type": "bytes32"
							}
						],
						"internalType": "struct EquitoMessage[]",
						"name": "messages",
						"type": "tuple[]"
					},
					{
						"internalType": "uint256",
						"name": "verifierIndex",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "proof",
						"type": "bytes"
					}
				],
				"name": "deliverMessages",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "equitoAddress",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "blockNumber",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "sourceChainSelector",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "bytes32",
										"name": "lower",
										"type": "bytes32"
									},
									{
										"internalType": "bytes32",
										"name": "upper",
										"type": "bytes32"
									}
								],
								"internalType": "struct bytes64",
								"name": "sender",
								"type": "tuple"
							},
							{
								"internalType": "uint256",
								"name": "destinationChainSelector",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "bytes32",
										"name": "lower",
										"type": "bytes32"
									},
									{
										"internalType": "bytes32",
										"name": "upper",
										"type": "bytes32"
									}
								],
								"internalType": "struct bytes64",
								"name": "receiver",
								"type": "tuple"
							},
							{
								"internalType": "bytes32",
								"name": "hashedData",
								"type": "bytes32"
							}
						],
						"internalType": "struct EquitoMessage",
						"name": "message",
						"type": "tuple"
					},
					{
						"internalType": "bytes",
						"name": "messageData",
						"type": "bytes"
					}
				],
				"name": "executeMessage",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "getFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "lower",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "upper",
								"type": "bytes32"
							}
						],
						"internalType": "struct bytes64",
						"name": "receiver",
						"type": "tuple"
					},
					{
						"internalType": "uint256",
						"name": "destinationChainSelector",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "sendMessage",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			}
		],
		"devdoc": {
			"events": {
				"MessageDelivered(bytes32)": {
					"params": {
						"messageHash": "The hash of the message that has been delivered."
					}
				},
				"MessageExecuted(bytes32)": {
					"params": {
						"messageHash": "The hash of the message that has been executed."
					}
				},
				"MessageSendRequested((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes)": {
					"params": {
						"message": "The message being sent.",
						"messageData": "The data of the message being sent."
					}
				},
				"VerifierAdded(address)": {
					"params": {
						"verifier": "The address of the new verifier."
					}
				}
			},
			"kind": "dev",
			"methods": {
				"deliverAndExecuteMessage((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes,uint256,bytes)": {
					"params": {
						"message": "The message to be executed.",
						"messageData": "The data of the message to be executed.",
						"proof": "The proof to provide to the verifier.",
						"verifierIndex": "The index of the verifier used to verify the message."
					}
				},
				"deliverMessages((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32)[],uint256,bytes)": {
					"params": {
						"messages": "The list of messages to be delivered.",
						"proof": "The proof provided by the verifier.",
						"verifierIndex": "The index of the verifier used to verify the messages."
					}
				},
				"executeMessage((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes)": {
					"params": {
						"message": "The message to be executed.",
						"messageData": "The data of the message to be executed."
					}
				},
				"sendMessage((bytes32,bytes32),uint256,bytes)": {
					"params": {
						"data": "The message data.",
						"destinationChainSelector": "The chain selector of the destination chain.",
						"receiver": "The address of the receiver."
					},
					"returns": {
						"_0": "The hash of the message."
					}
				}
			},
			"title": "IRouter",
			"version": 1
		},
		"userdoc": {
			"events": {
				"EquitoAddressSet()": {
					"notice": "Event emitted when the equito address is set."
				},
				"EquitoFeesSet()": {
					"notice": "Emitted when the Equito fees are set."
				},
				"MessageDelivered(bytes32)": {
					"notice": "Emitted when a messages has successfully been delivered, ready to be executed."
				},
				"MessageExecuted(bytes32)": {
					"notice": "Emitted when a message has successfully been executed."
				},
				"MessageSendRequested((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes)": {
					"notice": "Emitted when a message send request is created."
				},
				"VerifierAdded(address)": {
					"notice": "Emitted when a new verifier is added."
				}
			},
			"kind": "user",
			"methods": {
				"chainSelector()": {
					"notice": "Returns the chain selector of the current chain."
				},
				"deliverAndExecuteMessage((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes,uint256,bytes)": {
					"notice": "Verify and execute a message with the appropriate receiver contract."
				},
				"deliverMessages((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32)[],uint256,bytes)": {
					"notice": "Delivers messages to be stored for later execution."
				},
				"equitoAddress()": {
					"notice": "Returns the equito address."
				},
				"executeMessage((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes)": {
					"notice": "Executes a stored message."
				},
				"sendMessage((bytes32,bytes32),uint256,bytes)": {
					"notice": "Sends a cross-chain message using Equito."
				}
			},
			"notice": "Interface for the Router contract, used to interact with the cross-chain messaging protocol.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"src/interfaces/IRouter.sol": "IRouter"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"src/interfaces/IRouter.sol": {
			"keccak256": "0xdf4d80b76f2b627a69c608fdfa3809f1893a83ecac52e0b90d0bf5c1207c25b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6012acac83909878e4a2680c9d5c75b6c9ff2e0f1433b75349738ff5096f75ca",
				"dweb:/ipfs/QmeDBp1WjGG7x48kqrBt1uJduX5SUmBJQAsHY3oAdNaBGJ"
			]
		},
		"src/libraries/EquitoMessageLibrary.sol": {
			"keccak256": "0xcc07267aa6af97e9bb238f44c3d8ec262916625c9a1a8e2510e15e4b6c1d5552",
			"license": "MIT",
			"urls": [
				"bzz-raw://47dd6eb755eaf0fef51d4682cc1297d0da980e3134cc993fc760ecbf42be4d1a",
				"dweb:/ipfs/QmP2YL7KRMw1UhJtvss86HMKiQtqLY7YEGN98GfzSqEEjw"
			]
		}
	},
	"version": 1
}